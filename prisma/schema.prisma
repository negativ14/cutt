// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime? @map("email_verified")
  image         String?
  urls          Url[]
  accounts      Account[]
  createdAt     DateTime  @default(now())

  @@map("users")
}

model Url {
  id          String   @id @default(cuid())
  shortId     String?   @unique
  originalUrl String
  customSlug  String?  @unique
  createdAt   DateTime @default(now())
  userId      String?
  user        User?    @relation(fields: [userId], references: [id])
  clicks      Click[]

  @@index([shortId])
}

model Click {
  id        String   @id @default(cuid())
  urlId     String
  url       Url?     @relation(fields: [urlId], references: [id])
  createdAt DateTime @default(now())
  browser   String?
  device    String?

  @@index([urlId])
  @@index([createdAt])
  @@index([urlId, createdAt])
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}
